{"version":3,"sources":["server/core/pluginLoader.js"],"names":["fs","require","path","registry","load","pluginPath","mkdirSync","e","code","console","error","pluginNames","readdirSync","map","pluginName","modulePath","join","alreadyLoaded","lstatSync","isDirectory","pluginModule","log","message","addModule","name","filter","p","module","exports"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,WAAWF,QAAQ,4BAAR,CAAf;;AAEA,SAASG,IAAT,CAAcC,UAAd,EAA0B;AAAA;;AACzB,KAAG;AACFL,KAAGM,SAAH,CAAaD,UAAb;AACA,EAFD,CAEC,OAAME,CAAN,EAAS;AACT,MAAGA,EAAEC,IAAF,IAAU,QAAb,EAAuB;AACtBC,WAAQC,KAAR,CAAcH,CAAd;AACA;AACD;AACD,KAAII,cAAcX,GAAGY,WAAH,CAAeP,UAAf,CAAlB;AACA,QAAOM,YAAYE,GAAZ,CAAgB,UAACC,UAAD,EAAgB;AACtC,MAAIC,aAAab,KAAKc,IAAL,CAAUX,UAAV,EAAsBS,UAAtB,CAAjB;AACA,MAAG,CAAC,MAAKG,aAAL,CAAmBH,UAAnB,CAAD,IAAmCd,GAAGkB,SAAH,CAAaH,UAAb,EAAyBI,WAAzB,EAAtC,EAA8E;AAC7E,OAAG;AACF,QAAIC,eAAenB,QAASc,UAAT,CAAnB;AACAN,YAAQY,GAAR,CAAYP,UAAZ,EAAwB,QAAxB;AACA,UAAKG,aAAL,CAAmBH,UAAnB,IAAiC,IAAjC;AACA,IAJD,CAIC,OAAMP,CAAN,EAAS;AACTE,YAAQC,KAAR,CAAcH,EAAEe,OAAhB;AACA;AACDnB,YAASoB,SAAT,CAAmBT,UAAnB,EAA+BM,YAA/B;AACA,UAAO;AACNI,UAAMV,UADA;AAENZ,UAAMa;AAFA,IAAP;AAIA,GAbD,MAaK;AACJ,UAAO,IAAP;AACA;AACD,EAlBM,EAkBJU,MAlBI,CAkBG,UAASC,CAAT,EAAY;AACrB,SAAO,CAAC,CAACA,CAAT;AACA,EApBM,CAAP;AAqBA;;AAEDC,OAAOC,OAAP,GAAiB;AAChBX,gBAAe,EADC;AAEhBb,OAAMA;AAFU,CAAjB","file":"pluginLoader.js","sourcesContent":["var fs = require('fs');\nvar path = require('path');\nvar registry = require('../../common/core/registry');\n\nfunction load(pluginPath) {\n\ttry{\n\t\tfs.mkdirSync(pluginPath);\n\t}catch(e) {\n\t\tif(e.code != \"EEXIST\") {\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\tvar pluginNames = fs.readdirSync(pluginPath);\n\treturn pluginNames.map((pluginName) => {\n\t\tvar modulePath = path.join(pluginPath, pluginName);\n\t\tif(!this.alreadyLoaded[pluginName] && fs.lstatSync(modulePath).isDirectory()) {\n\t\t\ttry{\n\t\t\t\tvar pluginModule = require( modulePath );\n\t\t\t\tconsole.log(pluginName, 'loaded');\n\t\t\t\tthis.alreadyLoaded[pluginName] = true;\n\t\t\t}catch(e) {\n\t\t\t\tconsole.error(e.message);\n\t\t\t}\n\t\t\tregistry.addModule(pluginName, pluginModule);\n\t\t\treturn {\n\t\t\t\tname: pluginName,\n\t\t\t\tpath: modulePath\n\t\t\t}\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}).filter(function(p) {\n\t\treturn !!p;\n\t});\n}\n\nmodule.exports = {\n\talreadyLoaded: {},\n\tload: load\n}"]}