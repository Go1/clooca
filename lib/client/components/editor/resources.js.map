{"version":3,"sources":["client/components/editor/resources.js"],"names":["React","require","Resources","createClass","getInitialState","resources","componentWillMount","setState","bind","componentDidMount","componentDidUpdate","componentWillUnmount","componentWillReceiveProps","nextProps","onChange","e","onSelect","props","target","value","summary","uri","substr","length","render","loaded","clooca","getModelInterface","getLoadedList","options","map","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;;AAEA,IAAIC,YAAYF,MAAMG,WAAN,CAAkB;AAAA;;;AAEhCC,mBAAiB,2BAAY;AAC3B,WAAO;AACNC,iBAAW;AADL,KAAP;AAGD,GAN+B;;AAQhCC,sBAAoB,8BAAW;AAC9B,QAAIC,WAAW,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAf;AACA,GAV+B;;AAYhCC,qBAAmB,6BAAY,CAC9B,CAb+B;;AAehCC,sBAAoB,8BAAY,CAC/B,CAhB+B;;AAkBhCC,wBAAuB,gCAAW,CACjC,CAnB+B;;AAqBhCC,6BAA2B,mCAASC,SAAT,EAAoB,CAC9C,CAtB+B;;AAwBhCC,YAAU,kBAASC,CAAT,EAAY;AACrB,QAAIC,WAAW,KAAKC,KAAL,CAAWD,QAA1B;AACA,QAAGA,QAAH,EAAa;AACZA,eAASD,EAAEG,MAAF,CAASC,KAAlB;AACA;AACD,GA7B+B;;AA+BhCC,WAAS,iBAASC,GAAT,EAAc;AACrB,WAAOA,IAAIC,MAAJ,CAAW,CAAX,EAAc,CAAd,IAAmB,KAAnB,GAA2BD,IAAIC,MAAJ,CAAWD,IAAIE,MAAJ,GAAW,EAAtB,CAAlC;AACD,GAjC+B;;AAmChCC,UAAQ,kBAAY;AAAA;;AAClB,QAAIC,SAASC,OAAOC,iBAAP,GAA2BC,aAA3B,EAAb;AACD,QAAIC,UAAUJ,OAAOK,GAAP,CAAW,UAACL,MAAD,EAAU;AAClC,aAAQ;AAAA;AAAA,UAAQ,KAAKA,OAAOJ,GAApB,EAAyB,OAAOI,OAAOJ,GAAvC;AAA6C,cAAKD,OAAL,CAAaK,OAAOJ,GAApB;AAA7C,OAAR;AACA,KAFa,CAAd;AAGC,WACC;AAAA;AAAA,QAAQ,UAAU,KAAKP,QAAvB;AAAkCe;AAAlC,KADD;AAGD;AA3C+B,CAAlB,CAAhB;;AA8CAE,OAAOC,OAAP,GAAiB9B,SAAjB","file":"resources.js","sourcesContent":["var React = require('react');\n\nlet Resources = React.createClass({\n\n  getInitialState: function () {\n    return {\n    \tresources: []\n    };\n  },\n\n  componentWillMount: function() {\n  \tvar setState = this.setState.bind(this);\n  },\n\n  componentDidMount: function () {\n  },\n\n  componentDidUpdate: function () {\n  },\n\n  componentWillUnmount : function() {\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n  },\n\n  onChange: function(e) {\n  \tlet onSelect = this.props.onSelect;\n  \tif(onSelect) {\n  \t\tonSelect(e.target.value);\n  \t}\n  },\n\n  summary: function(uri) {\n    return uri.substr(0, 6) + '...' + uri.substr(uri.length-12);\n  },\n\n  render: function () {\n    var loaded = clooca.getModelInterface().getLoadedList();\n  \tvar options = loaded.map((loaded)=>{\n  \t\treturn (<option key={loaded.uri} value={loaded.uri}>{this.summary(loaded.uri)}</option>);\n  \t});\n    return (\n    \t<select onChange={this.onChange}>{options}</select>\n    );\n  }\n});\n\nmodule.exports = Resources;"]}