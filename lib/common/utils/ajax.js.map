{"version":3,"sources":["common/utils/ajax.js"],"names":["http","require","https","querystring","URL","request","method","url","params","headers","callback","_dataOptions","dataOptions","urlObject","parse","http_client","protocol","req","options","hostname","port","path","postItem","stringify","get","process_response","on","e","setTimeout","Error","abort","err","JSON","write","end","res","content","str","responseType","requestBrowser","_options","xhr","createCORSRequest","withCredentials","onload","responseText","onerror","statusText","setRequestHeader","params_str","header_key","send","post","Promise","resolve","reject","data","qs","put","deleteMethod","process","title","module","exports","delete","result","XMLHttpRequest","open","XDomainRequest"],"mappings":"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","file":"ajax.js","sourcesContent":["const http = require(\"http\"),\n    https = require('https'),\n    querystring = require(\"querystring\"),\n    URL = require('url');\n\n\n/**\n * @params options req,res\n */\nfunction request(method, url, params, headers, callback, _dataOptions) {\n\tvar dataOptions = _dataOptions || {};\n\tvar urlObject = URL.parse(url);\n\tvar http_client = urlObject.protocol==\"https:\" ? https : http;\n\tif(dataOptions.req == 'json') {\n\t\theaders['Content-Type'] = 'application/json';\n\t}else{\n\t\theaders['Content-Type'] = 'application/x-www-form-urlencoded';\n\t}\n\tvar options = {\n\t\thostname: urlObject.hostname,\n\t\tport: urlObject.port,\n\t\tpath: urlObject.path,\n\t\tmethod: method,\n\t\theaders : headers\n\t};\n\n\tif(method == 'GET' || method == 'DELETE') {\n\t\tvar postItem = querystring.stringify(params);\n\t\toptions.path += '?'+ postItem;\n\t\thttp_client.get(options, process_response)\n\t\t.on('error', function (e) {\n\t\t\tcallback(e);\n\t\t});\n\t}else{\n\t\tvar req = http_client.request(options, process_response);\n\t\treq.setTimeout(5000);\n\t\treq.on('timeout', function() {\n\t\t\tif(callback) callback(new Error(\"timed out\"), null);\n\t\t\treq.abort();\n\t\t});\n\t\treq.on('error', function(err) {\n\t\t\tif(callback) callback(err, null);\n\t\t});\n\t\tif(dataOptions.req == 'json') {\n\t\t\tvar postItem = JSON.stringify(params);\n\t\t}else{\n\t\t\tvar postItem = querystring.stringify(params);\n\t\t}\n\t\tvar postItem = querystring.stringify(params);\n\t\treq.write(postItem);\n\t\treq.end();\n\t}\n\n\tfunction process_response(res) {\n\t\tif(callback) {\n\t\t\tvar content = \"\";\n\t\t\tres.on('data', function(str) {\n\t\t\t\tcontent += str;\n\t\t\t});\n\t\t\tres.on('end', function() {\n\t\t\t\tresponseType(dataOptions, content, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction requestBrowser(method, url, params, headers, callback, _options) {\n\tvar options = _options || {};\n\tvar urlObject = URL.parse(url);\n\tif(method == 'GET' || method == 'DELETE') {\n\t\turl += '?' + querystring.stringify(params);\n\t}\n\tvar xhr = createCORSRequest(method , url);\n\txhr.withCredentials = true;\n\txhr.onload = function() {\n\t\tresponseType(options, xhr.responseText, callback);\n\t}\n\txhr.onerror = function() {\n\t\tcallback(xhr.statusText || 'unknown error');\n\t}\n\tif(options.req == 'json') {\n\t\txhr.setRequestHeader(\"Content-type\", \"application/json\");\n\t\tvar params_str = JSON.stringify(params);\n\t}else{\n\t\txhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t\tvar params_str = querystring.stringify(params);\n\t}\n\tfor(header_key in headers) {\n\t\txhr.setRequestHeader(header_key, headers[header_key]);\n\t}\n\tif(method == 'GET' || method == 'DELETE') {\n\t\txhr.send();\n\t}else{\n\t\txhr.send(params_str);\n\t}\n}\n\n\nfunction post(url, params, options) {\n\treturn new Promise((resolve, reject) => {\n\t\tthis.request('POST', url, params, {}, function(err, data) {\n\t\t\tif(err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\tresolve(data);\n\t\t}, options);\n\t});\n}\n\nfunction get(url, qs, options) {\n\treturn new Promise((resolve, reject) => {\n\t\tthis.request('GET', url, qs, {}, function(err, data) {\n\t\t\tif(err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\tresolve(data);\n\t\t}, options);\n\t});\n}\n\nfunction put(url, params, options) {\n\treturn new Promise((resolve, reject) => {\n\t\tthis.request('PUT', url, params, {}, function(err, data) {\n\t\t\tif(err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\tresolve(data);\n\t\t}, options);\n\t});\n}\n\nfunction deleteMethod(url, qs, options) {\n\treturn new Promise((resolve, reject) => {\n\t\tthis.request('GET', url, qs, {}, function(err, data) {\n\t\t\tif(err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t\tresolve(data);\n\t\t}, options);\n\t});\n}\n\nif ('browser' !== process.title) {\n\tmodule.exports = {\n\t\trequest : request,\n\t\tpost: post,\n\t\tget: get,\n\t\tput: put,\n\t\tdelete: deleteMethod\n\t}\n}else{\n\tmodule.exports = {\n\t\trequest : requestBrowser,\n\t\tpost: post,\n\t\tget: get,\n\t\tput: put,\n\t\tdelete: deleteMethod\n\t}\n}\n\nfunction responseType(options, data, callback) {\n\tif(options.res == 'json') {\n\t\tvar result = JSON.parse(data);\n\t}else{\n\t\tvar result = data;\n\t}\n\tcallback(null, result);\n}\n\nfunction createCORSRequest(method, url) {\n    var xhr = new XMLHttpRequest();\n    if (\"withCredentials\" in xhr) {\n        xhr.open(method, url, true);\n    } else if (typeof XDomainRequest != \"undefined\") {\n        xhr = new XDomainRequest();\n        xhr.open(method, url);\n    } else {\n        xhr = null;\n    }\n    return xhr;\n}"]}