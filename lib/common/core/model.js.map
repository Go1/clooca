{"version":3,"sources":["common/core/model.js"],"names":["Ecore","require","uuid","EventEmitter2","loadedModels","resourceSet","ResourceSet","create","server","wildcard","delimiter","newListener","maxListeners","model","uri","metamodel","get","filter","r","emit","data","mode","Promise","resolve","reject","callback","err","setCurrentModel","push","resource","add","EcorePackage","load","to","JSON","event","args","cb","on","fireUpdate","query"],"mappings":"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","file":"model.js","sourcesContent":["var Ecore = require('ecore');\nvar uuid = require('uuid');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\nexport default class {\n\tconstructor() {\n\t\tthis.loadedModels = [];\n\t\tthis.resourceSet = Ecore.ResourceSet.create();\n\t\tthis.server = new EventEmitter2({\n\t\t\twildcard: true,\n\t\t\tdelimiter: '.',\n\t\t\tnewListener: true,\n\t\t\tmaxListeners: 20\n\t\t});\n\t}\n\n\tgetRawModel() {\n\t\tif (!this.model) {\n\t\t\tthis.model = this.resourceSet.create({ uri: 'model.json' });\n\t\t}\n\t\treturn this.model;\n\t}\n\n\tgetRawMetaModel() {\n\t\treturn this.metamodel;\n\t}\n\n\tgetResourceSet() {\n\t\treturn this.resourceSet;\n\t}\n\n\tgetLoadedList() {\n\t\treturn this.loadedModels;\n\t}\n\n\tsetCurrentModel(uri) {\n\t\tthis.model = this.resourceSet.get('resources').filter(function (r) {\n\t\t\treturn r.get('uri') == uri;\n\t\t})[0];\n\t\tthis.emit('model.change', this.model);\n\t}\n\n\tgetCurrentModel() {\n\t\treturn this.model;\n\t}\n\n\tloadModel(uri, data, mode) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst callback = (model, err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (mode == \"w\") {\n\t\t\t\t\tthis.setCurrentModel(uri);\n\t\t\t\t\tthis.loadedModels.push({ uri: uri });\n\t\t\t\t}\n\t\t\t\tresolve(model);\n\t\t\t};\n\t\t\tif (uri == 'http://www.eclipse.org/emf/2002/Ecore') {\n\t\t\t\tvar resource = this.resourceSet.create({ uri: uri });\n\t\t\t\tresource.add(Ecore.EcorePackage);\n\t\t\t\tresolve(Ecore.EcorePackage);\n\t\t\t} else {\n\t\t\t\tif (data) {\n\t\t\t\t\tthis.resourceSet.create({ uri: uri }).load(data, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar model = this.resourceSet.create({ uri: uri });\n\t\t\t\t\tif (mode == \"w\") {\n\t\t\t\t\t\tthis.setCurrentModel(uri);\n\t\t\t\t\t\tthis.loadedModels.push({ uri: uri });\n\t\t\t\t\t}\n\t\t\t\t\tresolve(model);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgetModelJSON() {\n\t\treturn {\n\t\t\turi: this.model.get('uri'),\n\t\t\tdata: this.model.to(Ecore.JSON)\n\t\t};\n\t}\n\n\temit(event, args) {\n\t\tthis.server.emit(event, args);\n\t}\n\n\ton(event, cb) {\n\t\tthis.server.on(event, cb);\n\t\tthis.fireUpdate();\n\t}\n\n\tquery(query) {\n\t\treturn new Promise(function (resolve, reject) {});\n\t}\n\n\tfireUpdate(model) {\n\t\tif (this.model) {\n\t\t\tthis.server.emit('update', {\n\t\t\t\tmodel: this.model\n\t\t\t});\n\t\t}\n\t}\n\n\n}"]}