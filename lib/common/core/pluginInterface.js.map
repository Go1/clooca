{"version":3,"sources":["common/core/pluginInterface.js"],"names":["ajax","require","registry","PluginInterface","moduleName","prototype","emit","first_argument","on","process","title","request","methodName","params","getModule","hasMethod","recvRequest","get","res","then","data","Promise","resolve","reject","err","content","module","exports"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,eAAR,CAAX;AACA,IAAIC,WAAWD,QAAQ,YAAR,CAAf;;AAEA,SAASE,eAAT,CAAyBC,UAAzB,EAAqC;AACpC,MAAKA,UAAL,GAAkBA,UAAlB;AACA;;AAEDD,gBAAgBE,SAAhB,CAA0BC,IAA1B,GAAiC,UAASC,cAAT,EAAyB,CAEzD,CAFD;;AAIAJ,gBAAgBE,SAAhB,CAA0BG,EAA1B,GAA+B,UAASD,cAAT,EAAyB,CAEvD,CAFD;;AAIA,IAAI,cAAcE,QAAQC,KAA1B,EAAiC;AAChCP,iBAAgBE,SAAhB,CAA0BM,OAA1B,GAAoC,UAASC,UAAT,EAAqBC,MAArB,EAA6B;AAChE,MAAIT,aAAa,KAAKA,UAAtB;AACA,MAAGF,SAASY,SAAT,CAAmBV,UAAnB,EAA+BW,SAA/B,CAAyCH,UAAzC,CAAH,EAAyD;AACxD,UAAOV,SAASY,SAAT,CAAmBV,UAAnB,EAA+BY,WAA/B,CAA2CJ,UAA3C,EAAuDC,MAAvD,CAAP;AACA,GAFD,MAEK,CAEJ;AACD,EAPD;AAQA,CATD,MASK;AACJV,iBAAgBE,SAAhB,CAA0BM,OAA1B,GAAoC,UAASC,UAAT,EAAqBC,MAArB,EAA6B;AAChE,MAAIT,aAAa,KAAKA,UAAtB;AACA,MAAGF,SAASY,SAAT,CAAmBV,UAAnB,EAA+BW,SAA/B,CAAyCH,UAAzC,CAAH,EAAyD;AACxD,UAAOV,SAASY,SAAT,CAAmBV,UAAnB,EAA+BY,WAA/B,CAA2CJ,UAA3C,EAAuDC,MAAvD,CAAP;AACA,GAFD,MAEK;AACJ,UAAOb,KAAKiB,GAAL,UAAgBb,UAAhB,SAA8BQ,UAA9B,EAA4CC,MAA5C,EAAoD,EAACK,KAAI,MAAL,EAApD,EAAkEC,IAAlE,CAAuE,UAACC,IAAD,EAAU;AACvF,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,SAAGH,KAAKI,GAAR,EAAa;AACZD,aAAOH,KAAKI,GAAZ;AACA;AACA;AACDF,aAAQF,KAAKK,OAAb;AACA,KANM,CAAP;AAOA,IARM,CAAP;AASA;AACD,EAfD;AAgBA;;AAGDC,OAAOC,OAAP,GAAiBxB,eAAjB","file":"pluginInterface.js","sourcesContent":["var ajax = require('../utils/ajax');\nvar registry = require('./registry');\n\nfunction PluginInterface(moduleName) {\n\tthis.moduleName = moduleName;\n}\n\nPluginInterface.prototype.emit = function(first_argument) {\n\t// body...\n};\n\nPluginInterface.prototype.on = function(first_argument) {\n\t// body...\n};\n\nif ('browser' !== process.title) {\n\tPluginInterface.prototype.request = function(methodName, params) {\n\t\tvar moduleName = this.moduleName;\n\t\tif(registry.getModule(moduleName).hasMethod(methodName)) {\n\t\t\treturn registry.getModule(moduleName).recvRequest(methodName, params);\n\t\t}else{\n\t\t\t//TODO\n\t\t}\n\t};\n}else{\n\tPluginInterface.prototype.request = function(methodName, params) {\n\t\tvar moduleName = this.moduleName;\n\t\tif(registry.getModule(moduleName).hasMethod(methodName)) {\n\t\t\treturn registry.getModule(moduleName).recvRequest(methodName, params);\n\t\t}else{\n\t\t\treturn ajax.get(`/cc/${moduleName}/${methodName}`, params, {res:'json'}).then((data) => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tif(data.err) {\n\t\t\t\t\t\treject(data.err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data.content);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\t\n}\n\n\nmodule.exports = PluginInterface;"]}